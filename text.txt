{
  "pipeline": [
    {
      "type": "source:targetprocess:EntityChanged",
      "entityTypes": [
        "teamassignment"
      ],
      "modifications": {
        "created": true,
        "deleted": true,
        "updated": [
          "Team",
          "Assignable"
        ]
      }
    },
    {
      "or": [
        {
          "and": [
            {
              "value": {
                "type": "constant",
                "value": "Feature"
              },
              "target": {
                "name": "Name",
                "type": "field",
                "target": {
                  "name": "EntityType",
                  "type": "field",
                  "target": {
                    "name": "Assignable",
                    "type": "field",
                    "target": {
                      "type": "pipelineBlockOutput"
                    }
                  }
                }
              },
              "operator": {
                "type": "is"
              }
            }
          ]
        }
      ],
      "type": "filter:Relational"
    },
    {
      "type": "action:JavaScript",
      "script": "\nconst utils = require('utils');\nconst api = context.getService(\"targetprocess/api/v2\");\nconst cmds = [];\nconsole.log(args.Current.Assignable)\n\nconst featureInfo = await api.queryAsync('Feature', {\n  where :`id=${args.Current.Assignable.id}`,\n  select: '{id,name, epic}'\n});\nconsole.log(featureInfo)\nif (featureInfo.length > 0) { \n  if (featureInfo[0].epic) { \n       cmds.push({\n    command: 'ActivateNamedTrigger',\n    payload: {\n      name: 'assign-teams-to-epics',\n      data: featureInfo[0].epic.id\n    }\n   })\n  }\n}\n\n\n\nconsole.log(cmds)\nreturn cmds;"
    }
  ]
}